{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\froman\fcharset0 Times-Roman;
\f3\froman\fcharset0 Times-Italic;\f4\froman\fcharset0 Times-BoldItalic;\f5\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;\red174\green0\blue240;
\red251\green2\blue7;\red251\green2\blue7;\red128\green0\blue128;\red253\green128\blue8;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c93333;\cssrgb\c74609\c21796\c95404;
\cssrgb\c100000\c14913\c0;\cssrgb\c100000\c14913\c0;\cssrgb\c57919\c12801\c57269;\cssrgb\c100000\c57637\c0;}
\margl1440\margr1440\vieww16840\viewh23820\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 La machine virtuelle:
\f1\b0\fs24 \
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs28 \cf2 \expnd0\expndtw0\kerning0
Une machine virtuelle est un environnement qui fonctionne comme un syst\'e8me informatique virtuel, avec son propre processeur, sa m\'e9moire, son interface r\'e9seau et son espace de stockage, mais qui est cr\'e9\'e9 sur un syst\'e8me mat\'e9riel physique (situ\'e9 sur site ou hors site). 
\f0\b L\'92hyperviseur
\f2\b0  est le logiciel qui permet de s\'e9parer les ressources de la machine du mat\'e9riel et de les approvisionner de mani\'e8re ad\'e9quate pour que la machine virtuelle puisse les utiliser.\'a0\
Les machines physiques, \'e9quip\'e9es d'un hyperviseur tel que KVM (Kernel-based Virtual Machine), sont appel\'e9es machines h\'f4tes, ordinateurs h\'f4tes, syst\'e8mes d'exploitation h\'f4tes ou simplement 
\f3\i h\'f4tes
\f2\i0 .Les nombreuses machines virtuelles qui utilisent les ressources sont des machines invit\'e9es, des ordinateurs invit\'e9s, des syst\'e8mes d'exploitation invit\'e9s ou plus simplement des 
\f3\i invit\'e9s
\f2\i0 . L'hyperviseur traite les ressources de calcul (processeur, m\'e9moire, stockage) \'e0 la mani\'e8re d'un pool de ressources qui peut \'eatre d\'e9plac\'e9 sans difficult\'e9 entre les invit\'e9s existants ou vers de nouvelles machines virtuelles.\
Les machines virtuelles permettent d'ex\'e9cuter simultan\'e9ment plusieurs syst\'e8mes d'exploitation sur un seul ordinateur, comme une distribution Linux\'ae sur un ordinateur portable sous MacOS. Chacun des syst\'e8mes d'exploitation s'ex\'e9cute sur le mat\'e9riel h\'f4te comme le ferait n'importe quel autre syst\'e8me d'exploitation ou application. L'exp\'e9rience de l'utilisateur final \'e9mul\'e9e au sein de la machine virtuelle est donc quasiment identique \'e0 celle offerte par un syst\'e8me d'exploitation ex\'e9cut\'e9 en temps r\'e9el sur une machine physique.\'a0\'a0\
L'usage de machines virtuelles est l'un des principes fondamentaux de la technologie \cf2 Java\cf2 . 
\fs24 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf2 Fonctionnement d'une machine virtuelle:\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 La \cf2 technologie de virtualisation\cf2  vous permet de partager un syst\'e8me avec de nombreux environnements virtuels. L'hyperviseur g\'e8re le mat\'e9riel et s\'e9pare les ressources physiques des environnements virtuels. Ces ressources sont partitionn\'e9es selon les besoins \'e0 partir de l'environnement physique et distribu\'e9es aux machines virtuelles.\
Lors de l'ex\'e9cution d'une machine virtuelle, si un utilisateur ou un programme lance une instruction qui sollicite des ressources suppl\'e9mentaires de la part de l'environnement physique, l'hyperviseur planifie la demande aupr\'e8s des ressources du syst\'e8me physique afin que le syst\'e8me d'exploitation et les applications de la machine virtuelle puissent acc\'e9der au pool partag\'e9 de ressources physiques.\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf2 Types d'hyperviseurs:\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 Il existe deux\'a0types d'hyperviseurs qui peuvent \'eatre utilis\'e9s pour virtualiser des ressources.\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b\fs24 \cf2 Type\'a01\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 Un hyperviseur de type\'a01 s'installe sur un syst\'e8me bare metal. L'hyperviseur planifie directement les ressources des machines virtuelles sur le mat\'e9riel. La solution KVM est un hyperviseur de type\'a01. Elle a \'e9t\'e9 int\'e9gr\'e9e au \cf2 noyau Linux\cf2  en\'a02007. Si vous utilisez une version r\'e9cente de \cf2 Linux\cf2 , vous b\'e9n\'e9ficiez donc d\'e9j\'e0 d'un acc\'e8s \'e0 KVM.\'a0\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b\fs24 \cf2 Type\'a02\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 Un hyperviseur de type\'a02 est h\'e9berg\'e9. Les ressources des machines virtuelles sont planifi\'e9es au niveau d'un syst\'e8me d'exploitation h\'f4te, lui-m\'eame ex\'e9cut\'e9 sur le mat\'e9riel. VMware\'a0Workstation et Oracle\'a0VirtualBox sont des exemples d'hyperviseurs de type\'a02.\'a0\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf2 Qu\'92est-ce qu\'92un serveur?:\

\f2\b0\fs28 Dispositif informatique qui offre des services  a un ou plusieurs clients. WWW,  mail, partage de p\'e9riph\'e9riques , base de donn\'e9es, contr\'f4le d\'92acc\'e8s\'85Un serveur r\'e9pond automatiquement a des requ\'eates provenant d\'92autres dispositifs informatiques(clients). Les requ\'eates sont normalis\'e9es et se conforment a des protocoles r\'e9seaux.\

\f0\b\fs36 WWW:\

\f2\b0\fs28 Syst\'e8me hypertexte public fonctionnant sur internet. Le Web permet de consulter, avec un navigateur, des pages accessibles sur des sites.\

\f0\b\fs36 Internet:
\f2\b0\fs28 \
R\'e9seau informatique mondial accessible au public. \

\f0\b\fs36 HTTP:
\f2\b0\fs28 \
Hypertext Transfer Protocol, protocole de communication client-serveur d\'e9velopp\'e9 pour le www. HTTPS est la variante s\'e9curis\'e9e par le chiffrement et l\'92authentification. Les clients HTTP les plus connus sont les navigateurs web.\

\f0\b\fs36 TCP:\

\f2\b0\fs28 Transmission Control Protocol. Protocole de transport fiable. TCP d\'e9coupe le flux d\'92octet en segments. Il \'e9tablit la connexion, transfert les donn\'e9es, clos la connection\

\f0\b\fs36 IP:
\f2\b0\fs28 \
Internet Protocol. Famille de protocoles de communication de r\'e9seaux informatiques con\'e7us pour entre utilis\'e9s sur internet.\

\f0\b\fs36 HTML:
\f2\b0\fs28 \
Hypertext Markup Language. Langage de balisage cousu pour representer les pages web.
\f0\b\fs36 \
Pourquoi utiliser une machine virtuelle\'a0?:\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 La consolidation du serveur est l'une des principales raisons qui justifient l'utilisation de machines virtuelles. La plupart des syst\'e8mes d'exploitation et des applications n'utilisent qu'une petite partie des ressources physiques disponibles lorsqu'ils sont d\'e9ploy\'e9s sur un syst\'e8me bare metal. Gr\'e2ce \'e0 la virtualisation de vos serveurs, vous disposez de nombreux serveurs virtuels sur chaque serveur physique, ce qui permet d'optimiser l'utilisation du mat\'e9riel.\'a0\
Vous n'avez pas besoin d'acheter des ressources physiques suppl\'e9mentaires, notamment des disques durs, et vous r\'e9duisez les besoins en mati\'e8re d'alimentation, d'espace et de refroidissement dans le datacenter. Les machines virtuelles offrent des fonctions de r\'e9cup\'e9ration apr\'e8s sinistre suppl\'e9mentaires parce qu'elles disposent de capacit\'e9s de basculement et de redondance qu'il n'\'e9tait auparavant possible d'obtenir qu'avec du mat\'e9riel suppl\'e9mentaire.\
Une machine virtuelle fournit un environnement isol\'e9 du reste du syst\'e8me, donc il ne peut y avoir aucune interf\'e9rence entre les programmes ex\'e9cut\'e9s au sein d'une machine virtuelle et sur le mat\'e9riel h\'f4te.\
Comme les machines virtuelles sont isol\'e9es, elles peuvent \'eatre utilis\'e9es pour tester de nouvelles applications ou mettre en place un environnement de production. Vous pouvez \'e9galement ex\'e9cuter une machine virtuelle r\'e9serv\'e9e \'e0 un processus sp\'e9cifique.
\fs24 \

\fs28 \
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 Aide de Oracle VM VirtualBox
\f2\b0\fs24 \
\pard\pardeftab720\sa240\partightenfactor0

\fs28 \cf2 https://docs.oracle.com/en/virtualization/virtualbox/\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sa240\qc\partightenfactor0

\f0\b\fs48 \cf4 D\'e9roulement du projet
\fs36 \cf2 \
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 -Pour r\'e9aliser ce projet nous allons nous servir du logiciel de virtualisation VirtualBox qui est pr\'e9sent sur l\'92ordinateur.\
-On ouvre VirtualBox et on clique sur nouveau.\
-On donne un nom \'e0 notre machine, un emplacement m\'e9moire et on choisit le syst\'e8me qui sera virtualis\'e9 et dans le cas pr\'e9sent on nous recommande Linux Debian \
-On nous demande la quantit\'e9 de ram dont nous avons besoin et VirtualBox nous recommande 1024MB\
-On nous demande de choisir une option pour le disque dur et on choisit de cr\'e9er un nouveau disque dur\
-On choisit le type de fichier qu\'92on veut utiliser pout notre nouveau disque dur, dans ce cas la il s\'92agira de 
\f0\b\fs36 .VDI
\f2\b0\fs28 , Virtual Disk Image. Format propri\'e9taire de VirtualBox\
-On choisit si la memoire sera g\'e9r\'e9e dynamiquement ou pas et dans ce cas oui, celle-ci s\'92agrandira jusqu\'92a atteindre la limite maximale disponible dans la machine virtuelle\
-On choisit la taille de la memoire, et comme je suis tent\'e9 de me lancer aussi dans les bonus je choisit 30.83 GB\
-On appuie sur enter et la machine virtuelle est cr\'e9\'e9e, il faut encore la configurer\
-On s\'e9lectionne la virtualbox cr\'e9\'e9e et on va dans settings -> storage ->  dans l\'92image disque du contr\'f4leur IDE on t\'e9l\'e9charge l\'92image de Debian et on l\'92assigne \'e0 l\'92optical drive\
-Maintenant on peut starter la machine virtuelle avec la fl\'e8che verte\
-On peut changer la taille de la fen\'eatre en cliquant sur l\'92ic\'f4ne display -> virtual screen 1 -> scale to 200% (autoscaled output)\
-On continue l\'92installation et comme on veut un s\'92emmerder dans le detail on ne choisit pas l\'92installation graphique mais la simple installation\
-On choisit la langue d\'92installation et la langue par d\'e9faut soit anglais\
-On choisit le pays, et comme l\'92Espagne n\'92est pas dans les possibilit\'e9s ca devint le syst\'e8me horaire am\'e9ricain avec la langue du nord de l\'92Am\'e9rique\
-Au pas suivant on nous demande de choisir le 
\f4\i\b\fs48 \cf5 hostname
\f2\i0\b0\fs28 \cf2  nom d\'92h\'f4te qui, comme le donne la donn\'e9e de l\'92exercice est notre login +42 soit 
\f4\i\b\fs48 \cf5 ageiser42
\f2\i0\b0\fs28 \cf2 \
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 Hostname:
\f2\b0  
\fs28 etiquette attribu\'e9e a un appareil connect\'e9 a un r\'e9seau informatique qui permet de l\'92identifier par exemple sur internet\
-La fen\'eatre suivante nous demande un domain name mais comme la donn\'e9e ne nous demande rien \'e0 ce sujet, on \'e9crit rien \

\f0\b\fs36 Domain name:
\f2\b0\fs28  ensemble d\'92ordinateurs relies ensemble et partageant une caract\'e9ristique commune\
-Il est temps de cr\'e9er un 
\f4\i\b\fs48 \cf5 mot de passe administrateur du root
\f2\i0\b0\fs28 \cf2  qui doit contenir au moins 7 caract\'e8res , une majuscule, une minuscule un nombre et ne pas contenir plus de 3 caract\'e8res cons\'e9cutifs identiques. Je choisis : 
\f4\i\b\fs48 \cf5 Born2be42.
\f2\i0\b0\fs28 \cf2 \
-On le r\'e9\'e9crit pour la confirmation\
-Pas suivant on choisit un 
\f4\i\b\fs48 \cf5 nom d\'92utilisateur
\f2\i0\b0\fs28 \cf2  different de l\'92admin user qui \'e9tait ageiser42, je choisi 
\f4\i\b\fs48 \cf5 ageiser
\f2\i0\b0\fs28 \cf2  \
-Pas suivant aussi ageiser\
-On choisit un mot de passe pour notre 
\f4\i\b\fs48 \cf6 nouvel utilisateur
\f2\i0\b0\fs28 \cf2  avec les m\'eames r\'e8gles qu\'92avant mais au mois 10 caract\'e8res ce sera 
\f4\i\b\fs48 \cf5 Pleiades42.
\f2\i0\b0\fs28 \cf2 \
-On configure l\'92heure de la time zone en l\'92occurence ce sera Madrid\
-La fen\'eatre suivante est pour le partitionment du disque, comme je veux faire les bonus il faut choisir manuel pour pouvoir \'e9diter les partitions une a une\
-La fen\'eatre suivante nous montre nos partitions et points de montage et nous n\'92avons actuellement aucune partition de faite. On choisit le p\'e9riph\'e9rique sur lequel nous voulons le cr\'e9er et dans ce cas il n\'92y a qu\'92un choix de possible
\f0\b \
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0 \cf2 -On accepte la confirmation suivante qui nous dit que si il y a d\'e9j\'e0 des partitions sur le p\'e9riph\'e9rique, elles seront supprim\'e9es\
-Ici appara\'eet notre table de partition vide, nous allons la configurer et pour ceci la s\'e9lectionner\
-On cr\'e9e une nouvelle partition\
-On cr\'e9e la nouvelle partition selon la donn\'e9e soit \'93sda1\'94 500m\
-On choisit le type de partition qui dans ce cas sera primaire vu qu\'92on voudra y installer l\'92 OS\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 Les types de partition:
\f2\b0\fs24 \
\pard\pardeftab720\sa240\partightenfactor0

\fs28 \cf2 Primaire: la seule possible pour pouvoir installer un OS, il ne peut y avoir que 4 partitions primaires par disque ou 3 primaires et une \'e9tendue\
Secondaire/\'e9tendue: con\'e7ue pour briser la limitation de 4 partitions principales sur un seul disque physique, il ne peut y avoir qu\'92une seule partition de ce type par disque et n\'92est utilis\'e9 que pour contenir des partitions logiques\
Logique: occupe une partie ou la totalit\'e9 de la partition \'e9tendue/primaire, qui a \'e9t\'e9 format\'e9e avec un type de syst\'e8me de fichiers sp\'e9cifique (dans notre cas, nous utiliserons 
\f0\b\fs36 ext4
\f2\b0\fs28 ) et assign\'e9e \'e0 un lecteur afin que le syst\'e8me d'exploitation reconnaisse les partitions logiques ou votre syst\'e8me de fichiers . Il peut y avoir un maximum de 23 partitions logiques dans une partition \'e9tendue, cependant Linux, le syst\'e8me d'exploitation avec lequel nous travaillons actuellement le r\'e9duit \'e0 15, plus que suffisant pour mener \'e0 bien ce projet.\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 ext4:\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 Syst\'e8me de fichier principalement destin\'e9 aux syst\'e8mes bas\'e9s sur GNU/LINUX. Voir wikipedia pour plus de d\'e9tails.
\f0\b\fs36 \
UNIX:
\f2\b0\fs28 \
Syst\'e8me d\'92exploitation qui repose sur un interpr\'e9teur ou superviseur (le shell)\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 Shell Unix:
\f2\b0\fs28 \
Interpr\'e9teur de commandes destin\'e9 aux syst\'e8mes d\'92exploitation Linux\

\f0\b\fs36 GNU:
\f2\b0\fs28 \
Syst\'e8me d\'92exploitation libre qui reprend les concepts de Unix\

\f0\b\fs36 Linux:
\f2\b0\fs28 \
Syst\'e8me d\'92exploitation Open Source bas\'e9 sur Unix\

\f0\b\fs36 Debian:
\f2\b0\fs28 \
Syst\'e8me d\'92exploitation Linux mis au point et maintenu par la team Debian\
\
\pard\pardeftab720\partightenfactor0
\cf2 -Choisir si l\'92on veut mettre cette partition au d\'e9but ou \'e0 la fin de l\'92espace, en l\'92occurence au d\'e9but.\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf2 \
-
\fs28 Fen\'eatre suivante est l\'92\'e9tat actuel de notre partition, on modifie le mount point comme demand\'e9 dans la donn\'e9e, pour ce faire on choisi boot\
-On termine cette partition en choisissant : done setting up the partition\
-On devrait maintenant voir notre partition apparaitre, maintenant nous devons cr\'e9er une partition logique avec tout l\'92espace disque disponible, non mont\'e9e et chiffr\'e9e. Par ce faire, nous s\'e9lectionnons l\'92espace libre o\'f9 nous voulons le cr\'e9er\
-On cree une nouvelle partition\
-On choisit la taille max\
-Le type sera logical cette fois\
-Dans mount point on s\'e9lectionne: do not mount it\
-Done setting up the partition\
-On configure les volumes crypt\'e9s pour pouvoir crypter notre volume, on choisit: configure encrypted volumes\
-On accepte la confirmation\
-On cr\'e9e les volumes crypt\'e9s\
-On choisit la partition \'e0 crypter qui en l\'92occurence est celle qui ne contient pas l\'92OS\
-Done setting up the partition\
-Finish\
-Nouveau message de confirmation qui nous dit que tout ce qui se trouve dans le dossier sera crypt\'e9\
-On choisit cancel\
-Il y a demande de creation de mot de passe je choisis
\fs24  
\f4\i\b\fs48 \cf5 Pleiades42-
\f2\i0\b0\fs24 \cf2 \
\pard\pardeftab720\sa240\partightenfactor0

\fs28 \cf2 -On r\'e9p\'e8te le meme code\
-On configure maintenant le gestionneur de volume logique\
-On accepte la confirmation qui nous dit que les changements seront gard\'e9s sur le disque\
-On cr\'e9e un groupe de volume, se sont des groupements de partitions \
-Le nom sera LVMGroup comme demand\'e9\
-On cr\'e9e ce groupe avec la partition non os\
-Maintenant on cr\'e9e toutes les partitions logiques \
-Create logical volume\
-On choisit le groupe que l\'92on vient de cr\'e9er\
-On choisit le nom du volume logique, le premier est root donc on tape root\
-Comme indiqu\'e9 dans le sujet, ce volume sera de 10GB\
-M\'eame operation pour swap 2.3g / utilis\'e9 pour d\'e9charger la RAM lorsque celle-ci est pleine\
-M\'eame operation pour home 5g / utilis\'e9 pour les fichiers utilisateurs\
-M\'eame operation pour var 3g  / utilis\'e9 pour les fichiers variables, dont la taille augmente ou diminue par exemple \
-M\'eame operation pour srv 3g / utilis\'e9 pour les donn\'e9es serveur\
-M\'eame operation pour tmp 3g / utilis\'e9 pour  les fichiers temporaires qui sont effac\'e9 au d\'e9marrage\
-M\'eame operation pour var-log 4g / utilis\'e9 pour les fichiers log\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 Pour de plus amples informations :
\f2\b0\fs28  https://www.dell.com/support/kbdoc/fr-fr/000131456/types-et-definitions-des-partitions-et-repertoires-linux-ubuntu?lwp=rt\
-Finish\
-On peut maintenant voir toutes nos partitions et espace libre et les partitions logiques, nous devons les configurer pour s\'e9lectionner le syst\'e8me de fichiers que nous voulons et le point de montage indiqu\'e9 par le sujet. Nous allons dans l\'92ordre et nous s\'e9lectionnons le premier qui apparait qui est home\

\f0\b\fs36 Point de montage: 
\f2\b0\fs28 r\'e9pertoire \'e0 partir duquel sont accessibles les donn\'e9es se trouvant sous forme d\'92un syst\'e8me de fichiers sur une partition de disque dur ou un p\'e9riph\'e9rique\
-On va dans: use as:\
-On choisit le syst\'e8me d\'92archive qui est le plus utilis\'e9 avec Linux soit ext4\
-Le point de montage sera home comme indiqu\'e9 dans le sujet\
-Done setting up the partition\
-M\'eame op\'e9ration pour root ext4 mount root\
-M\'eame op\'e9ration pour srv ext4 mount srv\
*Pour swap ce sera different: use as: swap area\
-Done setting up the partition\
-Pour tmp m\'eame operation que *, ext4, mount tmp\
-M\'eame op\'e9ration pour var ext4 mount var\
-Pour var log c\'92est different: ext4, mount point enter manually, /var/log, done setting up the partition\
-Finish partitioning and write changes to disk\
-On confirme\
-On nous demande si on veut des paquets additionnels, mais non \
-On choisit notre pays, en l\'92occurence l\'92Espagne\
-On choisit le mirror de notre region deb.debian.org\
-On laisse le choix du proxy vide\

\f0\b\fs36 Proxy:
\f2\b0\fs28  composant logiciel informatique qui joue le r\'f4le d\'92interm\'e9diaire en se pla\'e7ant entre deux h\'f4tes pour faciliter ou surveiller leurs \'e9changes\
-On nous demande si les programmeurs de virtual box peuvent se servir de nos informations, on les envoie chier\
-On enl\'e8ve toutes les additions de programme suppl\'e9mentaires\
-Il faut installer grub boot loader qui n\'92existe pas encore dans ce bordel\

\f0\b\fs36 Boot loader:
\f2\b0\fs28  logiciel permettant de lancer un ou plusieurs syst\'e8mes d\'92exploitations sur la m\'eame machine\

\f0\b\fs36 GNU GRUB:
\f2\b0\fs28   https://www.gnu.org/software/grub/\
-On choisit le p\'e9riph\'e9rique pour le boot loader ce sera le pr\'e9s\'e9lectionne Ata vbox\
-On appuie sur continue \

\f0\b\fs36 Configuration de la machine virtuelle:\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 -On nous demande notre code, le 
\f4\i\b\fs48 \cf6 code d\'92encryptage
\f2\i0\b0\fs28 \cf2 ,  qui est le dernier que j\'92ai cree soit 
\f4\i\b\fs48 \cf5 Pleiades42-
\f2\i0\b0\fs28 \cf2 \
-On nous demande d\'92introduire le 
\f4\i\b\fs36 \cf6 nom d\'92utilisateur
\f2\i0\b0\fs28 \cf2  et le code mais pas de l\'92admin soit 
\f4\i\b\fs36 \cf6 ageiser
\f2\i0\b0\fs28 \cf2  avec le code 
\f4\i\b\fs36 \cf6 Pleiades42.
\f2\i0\b0\fs28 \cf2 \
-On est enfin pr\'eat \'e0 configurer notre machine virtuelle\
-Installation de SUDO et configuration des utilisateurs et groupes\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 SUDO:\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 Substitute User DO, Super User DO ou Switch User DO. Permet a un administrateur syst\'e8me d\'92accorder a certains utilisateurs des droits d\'92utilisation\
La commande su[vide]  ou su[root], nous am\'e8ne au root user et su[ageiser] passe au simple user\
-Pour pouvoir installer le sudo on doit commencer par \'eatre en utilisateur root. Pour ce faire on entre \'93
\f4\i\b\fs48 \cf6 su
\f2\i0\b0\fs28 \cf2 \'94 dans le terminal virtuel et on introduit le code root qui dans mon cas est 
\f4\i\b\fs48 \cf5 Born2be42.
\f2\i0\b0\fs36 \

\fs28 \cf2 -On tape la commande: apt install sudo pour installer les paquets n\'e9cessaires\
-Une fois que c\'92est fait on doit red\'e9marrer la machine grace a la commande: sudo reboot
\fs36 \cf5 \

\fs28 \cf2 -Une fois red\'e9marr\'e9 ont r\'e9introduit le 
\f4\i\b\fs48 \cf6 code d\'92encryptage
\f2\i0\b0\fs28 \cf2 , 
\f4\i\b\fs48 \cf5 Pleiades 42-
\f2\i0\b0\fs28 \cf2 , le 
\f4\i\b\fs48 \cf6 nom d\'92utilisateur
\f2\i0\b0\fs28 \cf2  
\f4\i\b\fs48 \cf5 ageiser
\f2\i0\b0\fs28 \cf2 , 
\f4\i\b\fs48 \cf6 le code
\f2\i0\b0\fs28 \cf2 , 
\f4\i\b\fs48 \cf5 Pleiades42.
\f2\i0\b0\fs36 \

\fs28 \cf2 -On se remet en mode 
\f4\i\b\fs48 \cf6 superuser
\f2\i0\b0\fs28 \cf2 , soit su suivi du code
\fs36  
\f4\i\b\fs48 \cf5 Born2be42.
\f2\i0\b0\fs28 \cf2 \
-Pour verifier l\'92installation correcte de sudo on tape la commande sudo -V. En plus de nous montrer la version de sudo install\'e9e, on nous montre aussi les arguments pour la configuration quand s\'92est cr\'e9\'e9 sudo et les plugins qui montrent des informations plus d\'e9taill\'e9es. Pour pouvoir lire ce fichier en entier on tape sudo -V > file.txt et ensuite \'e9diter le fichier avec nano file.txt, ou alors on tape sudo -V | more pour pouvoir lire tout le fichier directement dans le terminal virtualbox.\
-Ensuite, toujours en \'e9tant root user on cr\'e9e un utilisateur avec notre login avec la commande: sudo adduser ageiser. Comme on a d\'e9j\'e0 cr\'e9\'e9 un utilisateur \'e0 notre nom , celui-ci doit nous retourner que cet utilisateur existe deja.\
-Maintenant on doit cr\'e9er un nouveau groupe appel\'e9 user 42. Pour la cr\'e9er nous tapons la commande : 
\f0\b\fs36 \cf7 sudo addgroup user42
\f2\b0\fs28 \cf2 \
On obtient le 
\f0\b\fs36 GID
\f2\b0\fs28  qui est le Group ID\
Pour verifier que les choses se sont bien pass\'e9es on utilise la commande: getent group user42\
Avec la commande: sudo adduser user group, on inclut les utilisateurs dans le groupe, on doit y inclure sudo et user42, soit: 
\f0\b\fs36 \cf7 sudo adduser ageiser user42
\f2\b0\fs28 \cf2 \
																		et: 
\f0\b\fs36 \cf7 sudo adduser ageiser sudo
\f2\b0\fs28 \cf2 \
pour verifier tout le passage sudo, on tape la commande: 
\f0\b\fs36 \cf7 getent group sudo
\f2\b0\fs28 \cf2  et 
\f0\b\fs36 \cf7 getent groupe user42
\f2\b0\fs28 \cf2 \
\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 Installation et configuration de ssh\
SSH:
\f2\b0\fs28  Secure Shell, protocole de communication s\'e9curis\'e9. Il impose une cl\'e9 de chiffrement. Tous les segments TCP seront chiffr\'e9s. Sa fonction principale est l\'92acc\'e8s \'e0 distance \'e0 un serveur via un canal s\'e9curis\'e9 dans lequel toutes les informations sont crypt\'e9es\

\f0\b\fs36 TCP:
\f2\b0\fs28  Transmission Control Protocol, protocole de transport fiable.\

\f0\b\fs36 Shell:
\f2\b0\fs28  interface syst\'e8me. Couche logicielle qui fournit l\'92interface utilisateur d\'92un syst\'e8me d\'92exploitation. Interface informatique qui coordonne les interactions homme-machine\
-Commen\'e7ons par mettre \'e0 jour le syst\'e8me avec la commande: 
\f0\b\fs36 \cf7 sudo apt update
\f2\b0\fs28 \cf2 \
-ensuite on installe l\'92outil principal pour l\'92acc\'e8s (remote) avec le protocole ssh en utilisant openssh.  La commande pour t\'e9l\'e9charger OPENSSH est :\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf7 sudo apt install openssh-server
\f2\b0\fs28 \cf2 , on \'e9crit: y, \'e0 la demande de confirmation\
-Pour verifier que l\'92installation des services ssh s\'92est bien pass\'e9e nous utilisons la commande: 
\f0\b\fs36 \cf7 sudo service ssh status
\f2\b0\fs28 \cf2 \
-Une fois l\'92installation termin\'e9e, il s\'92est cr\'e9\'e9 quelques fichiers que nous devons configurer. Pour \'e7a nous utiliserons nano qui est pr\'e9 install\'e9 contrairement \'e0 vim. En \'e9tant utilisateur root, nous commencerons par \'e9diter le fichier sshd_config avec cette commande: 
\f0\b\fs36 \cf7 sudo nano /etc/ssh/sshd_config
\f2\b0\fs28 \cf2  \
-Les \'e9toiles en d\'e9but de ligne sont des lignes comment\'e9es, les lignes que nous allons modifier devront \'eatre d\'e9comment\'e9es\
-Nous modifions le port qui doit \'eatre 4242 plut\'f4t que 22, le permit root login doit \'eatre permit root login no, ctrl x, y et enter pour sauvegarder les changements\
-Maintenant on \'e9dite le fichier ssh_config avec la commande: 
\f0\b\fs36 \cf7 nano /etc/ssh/ssh_config
\f2\b0\fs28 \cf2 , on modifie aussi le port en 4242, ctrl x, y, enter\
-Pour finir on doit r\'e9initialiser le service ssh pour que les modifications soient actualises. On \'e9crit la commande: 
\f0\b\fs36 \cf7 sudo service ssh restart
\f2\b0\fs28 \cf2  et on v\'e9rifie notre statut actuel avec la commande 
\f0\b\fs36 \cf7 sudo service ssh status
\f2\b0\fs28 \cf2 , on regarde si les serveurs listening sont cal\'e9s sur le port 4242\
\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 Installation et configuration de UFW
\f2\b0\fs28 \

\f0\b\fs36 UFW:
\f2\b0\fs28  uncomplicated Firewall, est un programme informatique pour g\'e9rer un pare-feu netfilter\

\f0\b\fs36 Pare-feu:
\f2\b0\fs28  logiciel ou mat\'e9riel permettant de faire respecter la politique de s\'e9curit\'e9 du r\'e9seau. D\'e9finition des types de communications autoris\'e9s sur ce r\'e9seau informatique. Surveillance et contr\'f4le des applications et flux de donn\'e9es.\

\f0\b\fs36 Netfilter:
\f2\b0\fs28  framework impl\'e9mentant un firewall au sein du noyau Linux\

\f0\b\fs36 Framework:
\f2\b0\fs28   environnement de d\'e9veloppement. Ensemble coherent de composants logiciels structurels qui sert a cr\'e9er les fondations ainsi que les grandes lignes d\'92un logiciel, c\'92est a dire une architecture.\
-Premiere chose a faire, installer ufw avec la commande: 
\f0\b\fs36 \cf7 sudo apt install ufw
\f2\b0\fs28 \cf2 , confirmation avec y\
-Une fois install\'e9, nous devons l\'92activer, pour \'e7a nous utilisons la commande suivante: 
\f0\b\fs36 \cf7 sudo ufw enable
\f2\b0\fs28 \cf2 , il nous retournera que le firewall est actif\
\pard\pardeftab720\partightenfactor0
\cf2 -Maintenant, ce que nous devons faire est de faire en sorte que notre pare-feu autorise les connexions effectu\'e9es via le port 4242. Nous le ferons avec la commande suivante: 
\f0\b\fs36 \cf7 sudo ufw allow 4242
\f2\b0\fs28 \cf2 \
-Pour terminer  nous testons que nous avons correctement configur\'e9 le ufw en regardant l\'92\'e9tat de notre pare-feu et que les connections se passant via le port 4242 sont autoris\'e9es. Commande: 
\f0\b\fs36 \cf7 sudo ufw status
\f2\b0\fs28 \cf2 \
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 Configurer un code fort pour sudo\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs28 \cf2 -Se rendre dans le fichier racine: cd .. cd ..
\f0\b\fs36 \

\f2\b0\fs28 -On cree un fichier dans le chemin /etc/sudoers.d/de mon fichier. Je l\'92appelle sudo_config parce que la configuration du mot de passe sera stock\'e9 dns ce fichier. La commande est : 
\f0\b\fs36 \cf7 touch /etc/sudoers.d/sudo_config
\f2\b0\fs28 \cf2 \
-On doit cr\'e9er le repertoire sudo dans le chemin /var/log parce que chaque commande que nous ex\'e9cutons avec sudo, tant avec input que output doit rester stock\'e9e dans ce repertoire. Commande 
\f0\b\fs36 \cf7 mkdir /var/log/sudo
\f2\b0\fs28 \cf2 \
Nous devons \'e9diter le fichier cr\'e9\'e9. Commande: 
\f0\b\fs36 \cf7 nano /etc/sudoers.d/sudo_config
\f2\b0\fs28 \cf2 \
-On tape dans ce fichier, suivant la demande de l\'92exercice:\
\pard\pardeftab720\partightenfactor0

\f5\fs24 \cf2 	Defaults  passwd_tries=3 // 3 tentatives possibles de faux code\
	Defaults  badpass_message=\'93wrong password\'94 // message personalis\'e9 pour un mauvais code sudo\
	Defaults  logfile="/var/log/sudo/sudo_config\'94// chaque action utilisant sudo sera archiv\'e9e dans ce fichier\
	Defaults  log_input, log_output // les input et output seront archiv\'e9es dans le fichier suivant\
	Defaults  iolog_dir="/var/log/sudo" //fichier in out\
	Defaults  requiretty //activation du mode tty, assistance particuli\'e8re pour raison de s\'e9curit\'e9\
	Defaults  secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin" // le chemin 		utilis\'e9 par sudo doit \'eatre restraint\
-Ctrl x, y, enter\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 Configuration de la politique de code forte
\f5\b0\fs24 \
\
\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs28 \cf2 -Le premier pas est d\'92editer le fichier login.defs. commande: 
\f0\b\fs36 \cf7 nano /etc/login.defs
\f2\b0\fs28 \cf2 \
-On change le pass_max_days a 30, le code ne doit \'eatre valable que 30 jours\
-On change aussi pass_min_days \'e0 2, nombre de jours permis avant de modifier un code\
-On quitte et sauve\
-Pour pouvoir continuer avec la configuration, on doit installer des paquets suppl\'e9mentaires avec la commande: 
\f0\b\fs36 \cf7 sudo apt install libpam-pwquality
\f2\b0\fs28 \cf2 , y\
-Le pas suivant est d\'92\'e9diter un autre fichier. Commande: 
\f0\b\fs36 \cf7 nano /etc/pam.d/common-password
\f2\b0\fs28 \cf2 , apr\'e8s retry=3, \
-on rajoute minlen=10 quantit\'e9 minimale de caract\'e8res du code\
-ucredit=-1 doit contenir au minimum un caract\'e8re majuscule\
-dcredit=-1 doit contenir au moins un numero\
-maxrepeat=3 il ne doit pas contenir plus de 3 memes caract\'e8res suivis  \
-reject username, ne peut contenir le nom d\'92utilisateur\
-difok=7, doit contenir au moins 7 caract\'e8res qui ne font pas partie de l\'92ancien code\
-enforce_for_root nous implementons ceci pour l\'92utilisateur root\
-Ctrl x, y\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 Se connecter via SSH\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs28 \cf2 -Pour se connecter par ssh on doit fermer la machine, ouvrir virtual box et aller sur configuration\
-On va dans l\'92onglet network, r\'e9glages avanc\'e9s, port forwarding\
-Ajouter, en haut a droite\
-Host port et guest port doivent \'eatre sur 4242, ok, ok\
-Pour pouvoir nous connecter \'e0 la machine virtuelle depuis la machine r\'e9elle, nous rallumons la machine virtuelle, nous devons ouvrir un terminal sur la machine r\'e9elle et \'e9crire : 
\f0\b\fs36 \cf7 ssh ageiser@localhost -p 4242
\f2\b0\fs28 \cf2 . Il nous demandera le mot de passe 
\f4\i\b\fs48 \cf6 Pleiades42. 
\f2\i0\b0\fs28 \cf2 su et une fois entr\'e9, le login apparaitra en vert et cela signifiera que nous sommes connect\'e9s  \
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs36 \cf2 Script\
Script, 
\f2\b0\fs28 programme informatique en langage interpr\'e9t\'e9. S\'e9quence de commande gard\'e9e dans un fichier qui, quand il s\'92ex\'e9cute, ex\'e9cute la fonction de chaque commande\
-
\f0\b\fs36 Architecture
\f2\b0\fs28 . Pour pouvoir voir l\'92architecture de l\'92os on peut taper la commande: 
\f0\b\fs36 \cf7 uname -a
\f2\b0\fs28 \cf2 \
-Pour afficher le nombre de 
\f0\b\fs36 processeurs physiques
\f2\b0\fs28 , on utilise le fichier /proc/cpuinfo qui fournit des informations sur le processeur, type, marque etc, nous utilisons la commande: 
\f0\b\fs36 \cf7 grep \'93physical id\'94 /proc/cpuinfo | wc -l
\f2\b0\fs28 \cf2 . Avec la commande grep (recherche), nous recherchons dans le fichier physical id et avec w -l on compte les lignes du r\'e9sultat de grep. Nous le faisons car la fa\'e7on de quantifier les processeurs n\'92est pas courante. Si il n\'92y a pas de processeurs, il marquera 0 et si il y a un processeur ou plus il affichera toutes les informations. De cette fa\'e7on, nous compterons simplement les lignes qu\'92il y a car c\'92est plus simple de quantifier de cette fa\'e7on \
-Pour montrer le nombre de 
\f0\b\fs36 processeur virtuel
\f2\b0\fs28  c\'92est similaire au point pr\'e9c\'e9dent avec la commande: 
\f0\b\fs36 \cf7 grep processor /proc/cpuinfo | wc -l
\f2\b0\fs28 \cf2 \
-Pour montrer la 
\f0\b\fs36 memoire ram
\f2\b0\fs28  nous utiliserons la commande: 
\f0\b\fs36 \cf7 free
\f2\b0\fs28 \cf2  pour voir sur le moment les infos de la ram. Free --help nous donne des infos sur cette commande. Nous utilisons la commande free --mega  parce que dans le sujet c\'92est demand\'e9.\
-Une fois fait cette commande, on doit filtrer les informations re\'e7ues parce qu\'92on pas besoin de tout, le premier point utile est la memoire utilis\'e9e, pour \'e7a on utilise la commande: 
\f0\b\fs36 \cf7 awk
\f2\b0\fs28 \cf2 . permet de filter les information qu\'92on cherche dans un fichier pour finir nous comparons si le premier mot d\'92un file est \'e9gale \'e0 MEM, nous afficherons le troisi\'e8me mot de la ligne qui est la memoire utilis\'e9e. La commande complete est: 
\f0\b\fs36 \cf7 free \'97mega | awk \'91$1 == \'93Mem:\'94 \{print $3\}\'92
\f2\b0\fs28 \cf2 . Dans le script, la valeur de retour de cette commande est assign\'e9e \'e0 une variable qui nous concat\'e8ne avec les autres variables pour que tout reste \'e9gal comme le sp\'e9cifie le sujet\
-Pour obtenir la memoire totale, on affiche la deuxi\'e8me colonne. Commande: 
\f0\b\fs36 \cf7 free \'97mega | aww \'91$1 ==\'93Mem:\'94 \{print $2\}\'92
\f2\b0\fs28 \cf2 \
-Pour la partie ultime de la ram on doit calculer le % de memoire utilis\'e9e. La commande est aussi similaire aux pr\'e9c\'e9dentes ne modifiant que la fa\'e7on dont les informations doivent \'eatre affich\'e9es. Comme l'op\'e9ration pour obtenir le pourcentage n'est pas exacte, elle peut nous donner de nombreuses d\'e9cimales et seulement 2 apparaissent dans le sujet, nous ferons donc de m\'eame, c'est pourquoi nous utilisons %.2f pour que seules 2 d\'e9cimales soient affich\'e9es. Pour afficher un %, vous devez mettre %%. L'int\'e9gralit\'e9 de la commande: 
\f0\b\fs36 \cf7 free --mega | awk '$1 == "M\'e9mo\'a0:" \{printf("(%.2f%%)\\n", $3/$2*100)\}'.
\f2\b0\fs28 \cf2 \

\f0\b\fs36 Memoire disque
\f2\b0\fs28 \
-Pour pouvoir voir la m\'e9moire disque libre et utilis\'e9e on se sert de la commande 
\f0\b\fs36 \cf7 df
\f2\b0\fs28 \cf2  qui signifie disk filesystem, utilis\'e9e pour obtenir un resum\'e9 complet de l\'92utilisation du disque. Le sujet indique que la m\'e9moire utilis\'e9e est en MB donc on utilise le flag -m. Ensuite on fait un grep pour nous montrer seulement les lignes qui contienne \'93/dev/\'93 et ensuite un autre grep avec le flag -v pour exclure les lignes contenant \'93/boot\'94. Enfin la commande awk, et on additionne la valeur du troisi\'e8me mot de chaque ligne et afficher le r\'e9sultat final de la somme. La commande enti\'e8re est: 
\f0\b\fs36 \cf7 df -m | grep "/dev/" | grep -v "/boot" | awk '\{memory_use += $3\} END \{print memory_use\}'
\f2\b0\fs28 \cf2 \
-Pour obtenir l\'92espace total, nous utilisons une commande similaire. Les uniques diff\'e9rences sont que nous additionnerons les valeurs de $2 plut\'f4t que $3 et la deuxi\'e8me diff\'e9rence est que nous voulons la valeur en GB. Pour \'e7a nous devons diviser le num\'e9ro par 1024 et enlever les d\'e9cimales. Commande: 
\f0\b\fs36 \cf7 df -m | grep "/dev/" | grep -v "/boot" | awk '\{memory_result += $2\} END \{printf (\'93%.0fGb\\n\'94), memory_result/1024\}\'92
\f2\b0\fs28 \cf2 \
-Pour finir on doit montrer un pourcentage de la memoire utilis\'e9e. Pour ca encore quelque chose de similaire. Cette fois-ci on veut deux variables, une pour la memoire utilis\'e9e et l\'92autre pour la totale. Nous utiliserons une operation pour obtenir le % soit use/total*100 et le r\'e9sultat de cette operation on l\'92affichera selon le sujet, entre parenth\'e8se et avec le symbole %. La commande: 
\f0\b\fs36 \cf7 df -m | grep "/dev/" | grep -v "/boot" | awk '\{use += $3\} \{total += $2\} END \{printf("(%d%%)\\n"), use/total*100\}'
\f2\b0\fs28 \cf2 \

\f0\b\fs36 Pourcentage de cpu utilise
\f2\b0\fs28 \
-Nous utilisons la commande 
\f0\b\fs36 \cf7 vmstat
\f2\b0\fs28 \cf2  pour \'e7a, cela montre les statistiques syst\'e8me. Dans mon cas je mettrai un intervalle de 1 a 4 secondes. On donne aussi la commande 
\f0\b\fs36 \cf7 tail -1
\f2\b0\fs28 \cf2  qui nous affichera que la derni\'e8re ligne donc pour les 4 lignes g\'e9n\'e9r\'e9es on n\'92affichera que la derni\'e8re. On ne veut que le mot 15 qui est l\'92utilisation de la m\'e9moire disponible.  La commande enti\'e8re est : 
\f0\b\fs36 \cf7 vmstat 1 4 | tail -1 | awk '\{print %15\}\'92
\f2\b0\fs28 \cf2 . Le r\'e9sultat de cette commande est seulement une partie du r\'e9sultat final parce qu\'92il faut encore faire une op\'e9ration dans le script pour que \'e7a se passe bien. Ce que nous aurons \'e0 faire est de soustraire de 100 le montant que notre commande nous a renvoy\'e9, nous imprimerons le r\'e9sultat de cette op\'e9ration avec une d\'e9cimale et un % \'e0 la fin et l'op\'e9ration serait effectu\'e9e\

\f0\b\fs36 Dernier d\'e9marrage
\f2\b0\fs28 \
Pour voir l\'92heure et la date de notre dernier d\'e9marrage nous utilisons la commande: 
\f0\b\fs36 \cf7 who
\f2\b0\fs28 \cf2  avec le flag -b qui nous montrera la dur\'e9e du dernier d\'e9marrage du syst\'e8me. Nous filtrons les informations avec awk. On affiche la ligne 3 et 4 avec un espace entre deux la commande enti\'e8re est la suivante: 
\f0\b\fs36 \cf7 who -b | awk '$1 == "system" \{print $3 " " $4\}'
\f2\b0\fs28 \cf2 \

\f0\b\fs36 Utilisation de LVM\
LVM, 
\f2\b0\fs28 logical volume management, logiciel de gestion de l\'92utilisation des espaces de stockage d\'92un ordinateur\
Pour verifier que LVM est actif, on utilise la commande 
\f0\b\fs36 \cf7 lsblk
\f2\b0\fs28 \cf2  qui nous donnera des informations sur toutes les m\'e9moires de l\'92ordi: SSD, disque dur\'85\
On commence par un if qui nous donnera un retour en yes or no. Basiquement la condition que nous cherchons est de conter le nombre de ligne ou apparait LVM et si il y en a plus que 0 on retourne yes, si 0 no. La commande est : 
\f0\b\fs36 \cf7 if [ $(lsblk | grep "lvm" | wc -l) -gt 0 ]; then echo yes; else echo no; fi
\f2\b0\fs28 \cf2 \

\f0\b\fs36 Connections TCP
\f2\b0\fs28 \
Pour voir le nombre de connection tcp \'e9tabli, on utilise la commande 
\f0\b\fs36 \cf7 ss
\f2\b0\fs28 \cf2  qui se substitue a netstat qui est obsol\'e8te. On filtre avec le flag -ta pour ne montrer que les connections tcp. On fait une recherche avec wc -l pour citer le nombre de ligne. La commande est:  
\f0\b\fs36 \cf7 ss -ta | grep ESTAB | wc -l
\f2\b0\fs28 \cf2 \

\f0\b\fs36 Nombre d\'92utilisateur
\f2\b0\fs28 \
Avec la commande user, cela affichera le nombre d\'92utilisateur existant. On ajoute le flag wc -w pour compter la quantit\'e9 de mot qu\'92il y a en sortie de commande. La commande enti\'e8re est: 
\f0\b\fs36 \cf7 users | wc -w
\f5\b0\fs24 \cf2 \

\f0\b\fs36 Adresse IP et MAC
\f2\b0\fs28 \

\f0\b\fs36 Adresse IP
\f2\b0\fs28 : numero d\'92identification attribu\'e9 de fa\'e7on provisoire ou permanente \'e0 chaque p\'e9riph\'e9rique reli\'e9 \'e0 un r\'e9seau informatique qui utilise l\'92Internet Protocol\

\f0\b\fs36 Adresse MAC
\f2\b0\fs28 : Media Access Control, ou adresse physique est un identifiant physique stock\'e9 dans une carte r\'e9seau. \
Pour obtenir l\'92adresse du Host, on utilise la commande 
\f0\b\fs36 \cf7 hostname -I
\f2\b0\fs28 \cf2  et pour obtenir l\'92adresse MAC la commande 
\f0\b\fs36 \cf7 ip link
\f2\b0\fs28 \cf2 . Comme il apparait plus d\'92une interface, on utilise la commande grep pour chercher ce que l\'92on souhaite et ainsi pouvoir afficher seulement ce qu\'92on nous demande. Commande : 
\f0\b\fs36 \cf7 ip link | grep "link/ether" | awk '\{print $2\}'
\f2\b0\fs28 \cf2  , de cette bacon on affichera que l\'92adresse MAC\

\f0\b\fs36 Nombre de commandes ex\'e9cut\'e9es avec SUDO
\f2\b0\fs28 \
-On utilise pour \'e7a la commande: 
\f0\b\fs36 \cf7 journalctl
\f2\b0\fs28 \cf2  qui est un outil qui se charge de collecter et g\'e9rer les registres syst\'e8mes. On ajoute  _comm=sudo pour filtrer les entrees. Dans notre cas comm qui fait reference \'e0 un script executable. On refiltre avec un grep COMMAND pour les fois o\'f9 on commence et fini une cession il y a des infos dont on se fout. Un wc -l pour sortir des lignes num\'e9rot\'e9es. La commande enti\'e8re est :  
\f0\b\fs36 \cf7 journalctl _COMM=sudo | grep COMMAND | wc -l
\f2\b0\fs28 \cf2 . Pour verifier que que ca fonctionne correctement on envie la commande dans le terminal, on fait une commande incluant sudo et on refait la commande et ca devrait avoir incr\'e9ment\'e9 le nombre d\'92execution de sudo.\

\f0\b\fs36 Script final
\f2\b0\fs28 :\
\pard\pardeftab720\sa240\partightenfactor0

\f5\fs24 \cf2 #!/bin/bash\
\pard\pardeftab720\partightenfactor0
\cf2 \
# ARCH\
arch=$(uname -a)\
\
# CPU PHYSICAL\
cpuf=$(grep "physical id" /proc/cpuinfo | wc -l)\
\
# CPU VIRTUAL\
cpuv=$(grep "processor" /proc/cpuinfo | wc -l)\
\
# RAM\
ram_total=$(free --mega | awk '$1 == "Mem:" \{print $2\}')\
ram_use=$(free --mega | awk '$1 == "Mem:" \{print $3\}')\
ram_percent=$(free --mega | awk '$1 == "Mem:" \{printf("%.2f"), $3/$2*100\}')\
\
# DISK\
disk_total=$(df -m | grep "/dev/" | grep -v "/boot" | awk '\{disk_t += $2\} END \{printf ("%.1fGb\\n"), disk_t/1024\}')\
disk_use=$(df -m | grep "/dev/" | grep -v "/boot" | awk '\{disk_u += $3\} END \{print disk_u\}')\
disk_percent=$(df -m | grep "/dev/" | grep -v "/boot" | awk '\{disk_u += $3\} \{disk_t+= $2\} END \{printf("%d"), disk_u/disk_t*100\}')\
\
# CPU LOAD\
cpul=$(vmstat 1 2 | tail -1 | awk '\{printf $15\}')\
cpu_op=$(expr 100 - $cpul)\
cpu_fin=$(printf "%.1f" $cpu_op)\
\
# LAST BOOT\
lb=$(who -b | awk '$1 == "system" \{print $3 " " $4\}')\
\
# LVM USE\
lvmu=$(if [ $(lsblk | grep "lvm" | wc -l) -gt 0 ]; then echo yes; else echo no; fi)\
\
# TCP CONNEXIONS\
tcpc=$(ss -ta | grep ESTAB | wc -l)\
\
# USER LOG\
ulog=$(users | wc -w)\
\
# NETWORK\
ip=$(hostname -I)\
mac=$(ip link | grep "link/ether" | awk '\{print $2\}')\
\
# SUDO\
cmnd=$(journalctl _COMM=sudo | grep COMMAND | wc -l)\
\
wall "	Architecture: $arch\
	CPU physical: $cpuf\
	vCPU: $cpuv\
	Memory Usage: $ram_use/$\{ram_total\}MB ($ram_percent%)\
	Disk Usage: $disk_use/$\{disk_total\} ($disk_percent%)\
	CPU load: $cpu_fin%\
	Last boot: $lb\
	LVM use: $lvmu\
	Connections TCP: $tcpc ESTABLISHED\
	User log: $ulog\
	Network: IP $ip ($mac)\
	Sudo: $cmnd cmd"\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 Crontab\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs28 \cf2 Gestionnaire de processus en arri\'e8re plan, les processus seront ex\'e9cut\'e9s au moment programm\'e9 dans Crontab\
-Pour configurer correctement crontab on doit \'e9diter son fichier ave la commande: 
\f0\b\fs36 \cf7 sudo crontab -u root -e
\f2\b0\fs28 \cf2 , on choisit l\'92\'e9diteur et comme j\'91ai tout fait avec nano, je continue\
-On doit ajouter une ligne de commande qui est */10 * * * * sh /home/ageiser/monitoring.sh. c\'92est une commande qui s\'92ex\'e9cutera toutes les 10 minutes\
\
Les param\'e8tres de Crontab: 	m-> correspond au nombre de minutes ou va s\'92ex\'e9cuter le script\
					h -> correspond \'e0 l\'92heure o\'f9 doit s\'92ex\'e9cuter le script\
					dom correspond au jour du mois\
					mon le mois\
					dow le jour de la semaine de 1 a 7\
					user defini l\'92utilisateur qui va executer le script\
					command -> route du script \'e0 ex\'e9cuter \
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 Signature.txt\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs28 \cf2 Pour obtenir la signature, la premiere chose \'e0 faire est \'e9teindre la machine virtuelle, car \'e0 chaque fois qu\'92on l\'92allume ou qu\'92on fait une modification, la signature changera\
Le pas suivant est de se retrouver avec le terminal standard dans le dossier dans lequel on a notre fichier .vdi de notre machine virtuelle dans sgoinfre\
\pard\pardeftab720\partightenfactor0

\f4\i\b\fs48 \cf8 Avec la commande shasum Born2BeRoot.vdi ca nous donnera la signature. Cette signature nous l\'92ajouterons a notre fichier signature.txt pour plus tard mettre le fichier dans le repertoire de l\'92intra.  On r\'e9ouvre la machine. La signature change. Pour les corrections, se souvenir de cloner la machine pour ne pas craindre que la signature change \cf5 Attention, \'e9tape non termin\'e9e\cf8 \
\pard\pardeftab720\partightenfactor0

\f2\i0\b0\fs28 \cf2 Shasum est une commande qui permet de verifier l\'92int\'e9grit\'e9 d\'92un fichier en faisant la somme du contr\'f4le du hash SHA-1 d\'92un fichier\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 Bonus:\
\
Lighttpd:\
Lighttpd
\f2\b0\fs28  est un serveur web d\'e9sign\'e9 pour \'eatre rapide s\'fbr et flexible. Optimis\'e9 pour les environnements o\'f9 la vitesse est importante. Il consomme moins de CPU et de Ram que les autres serveurs\
-On installe le package lighttpd avec la commande: 
\f0\b\fs36 \cf7 sudo apt install lighttpd
\f2\b0\fs28 \cf2 \
-On permet les connections via le port 80 avec la commande 
\f0\b\fs36 \cf7 sudo ufw allow 80
\f2\b0\fs28 \cf2 \
-On v\'e9rifie que \'e7a roule avec la commande 
\f0\b\fs36 \cf7 sudo ufw status
\f2\b0\fs28 \cf2 \
-On ajoute la r\'e8gle du port 80 comme on l\'92a fait dans virtual box pour le port 4242\

\f0\b\fs36 \
MariaDB:\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs28 \cf2 MariaDB est une base de donn\'e9e. Utilis\'e9e \'e0 des fins de stockage de donn\'e9es, de commerce \'e9lectronique, de fonctions au niveau de l\'92entreprise et les applications de tenue de registre.\
-On installe les paquets avec la commande: 
\f0\b\fs36 \cf7 sudo apt install mariadb-server
\f2\b0\fs28 \cf2 \
-\'c9tant donn\'e9 que la configuration par d\'e9faut laisse votre installation MariaDB non s\'e9curis\'e9e, nous utiliserons un script fourni par le package mariadb-server pour restreindre l'acc\'e8s au serveur et supprimer les comptes inutilis\'e9s. Nous allons ex\'e9cuter le script avec la commande suivante: 
\f0\b\fs36 \cf7 sudo mysql_secure_installation
\f2\b0\fs28 \cf2 . Une fois ex\'e9cut\'e9, le script nous posera une s\'e9rie de questions, notamment si nous voulons passer \'e0 l'authentification par socket Unix. Puisque nous avons d\'e9j\'e0 un compte root prot\'e9g\'e9 nous \'e9crirons Non\
-Change root password: n, on ne veut pas changer. Mariadb n\'92est pas vraiment root puisqu\'92on lui donne des permissions utilisateurs\
-Remove anonymous users: y, par d\'e9faut il y a un utilisateur anonyme dans mariaDB. On supprime ce user anonyme vu qu\'91on g\'e8re tous les details\
-Disallow root login remotely: y, on d\'e9sactive la connection root \'e0 distance, nous emp\'eachons qu\'92on modifie notre code. On ne peut se connecter que depuis localhost\
-Remove test database and access to it? : y \
-Reload privilege tables now? Y 
\f0\b\fs36 \cf5 \
\
\pard\pardeftab720\partightenfactor0
\cf2 Phpmyadmin:\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs28 \cf2 Phpmyadmin est une application web qui permet de g\'e9rer des bases de donn\'e9es de mani\'e8re simple et avec une interface conviviale\
On installe le paquet avec la commande: 
\f0\b\fs36 \cf7 sudo apt install php_cgi php_mysql phpmyadmin
\f2\b0\fs28 \cf2 \
on tape mariadb\
GRANT ALL PRIVILEGES ON * . * TO \'91phpmyadmin \'91@\'91 localhost\'92; \
SHOW DATABASES\
Exit\
-Toute cette \'e9tape peut aussi se faire depuis un navigateur en tapant localhost dans la barre d\'92adresse\
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 \
Wordpress:\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs28 \cf2 Content management system. Syst\'e8me de gestion de contenu axe sur la creation de tout type de page web\
-Commande: 
\f0\b\fs36 \cf7 sudo apt install wget zip
\f2\b0\fs28 \cf2 \
-cd /var/www/\
-
\f0\b\fs36 \cf7 sudo wget https://fr.wordpress.org/latest-fr_FR.zip
\f2\b0\fs28 \cf2 \
-
\f0\b\fs36 \cf7 sudo unzip latest-fr_FR.zip
\f2\b0\fs28 \cf2 \
-
\f0\b\fs36 \cf7 sudo mv html/ html_old/
\f2\b0\fs28 \cf2 \
-
\f0\b\fs36 \cf7 sudo mv Wordpress/ html
\f2\b0\fs28 \cf2 \
-
\f0\b\fs36 \cf7 sudo chmod -R 755 html
\f2\b0\fs28 \cf2 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 \
LiteSpeed:\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs28 \cf2 Logiciel de serveur Web propri\'e9taire. C\'92est le quatri\'e8me serveur web le plus populaire et est utilis\'e9 par 10% des sites web.\
-On commence par mettre a jour.  	
\f0\b\fs36 \cf7 sudo apt update
\f2\b0\fs28 \cf2 \
						
\f0\b\fs36 \cf7 sudo apt upgrade
\f2\b0\fs28 \cf2 \
-Par faut, OpenLiteSpeed est disponible dans le r\'e9f\'e9rentiel de base Debian 11. On doit donc ex\'e9cuter une commande pour ajouter le r\'e9f\'e9rentiel OPENLITESPEED \'e0 mon syst\'e8me Debian. 
\f0\b\fs36 \cf7 wget -O - http://rpms.litespeedtech.com/debian/enable_lst_debian_repo.sh | sudo bash
\f2\b0\fs28 \cf2 \
-On refait une mise \'e0 jour 
\f0\b\fs36 \cf7 sudo apt update
\f2\b0\fs28 \cf2 \
-
\f0\b\fs36 \cf7 sudo apt install openlitespeed
\f2\b0\fs28 \cf2 \
-Le code de base pour OpenLiteSpeed es 123456. On la change pour quelque chose de plus s\'fbr avec la commande : 
\f0\b\fs36 \cf7 sudo /usr/local/lsws/admin/misc/admpass.sh
\f2\b0\fs28 \cf2 \
-Administrator:
\f0\b\fs36  
\fs48 \cf5 ageiser
\fs36 \cf2 , 
\f2\b0\fs28 password 
\f0\b\fs48 \cf5 Pleiades42,
\fs36 \

\f2\b0\fs28 \cf2 -Nous configurons le firewall pour autoriser les connections via les ports 8088 et 7080\
-Commande: 
\f0\b\fs36 \cf7 sudo ufw allow 8088/tcp
\f2\b0\fs28 \cf2 \
-
\f0\b\fs36 \cf7 sudo ufw allow 7080/tcp
\f2\b0\fs28 \cf2 \
-
\f0\b\fs36 \cf7 sudo ufw reload
\f2\b0\fs28 \cf2 \
-Dans la fen\'eatre de virtual box on ajoute les deux ports\
-Une fois termin\'e9, on peut se connecter 
\f0\b\fs36 \

\f2\b0\fs28 -Dans le moteur de recherche de notre navigateur on tape localhost:7080 en donnant nos identifiants de connexion on doit avoir acc\'e8s a tout\
\pard\pardeftab720\partightenfactor0
\cf5 \
\
\pard\pardeftab720\partightenfactor0
\cf2 Corrections:\
\
\
\
\
\
\
\
\pard\pardeftab720\partightenfactor0

\f4\i\b\fs48 \cf8 \
\pard\pardeftab720\partightenfactor0

\f2\i0\b0\fs28 \cf2 \
}